#!groovy

pipeline {
  agent any
  parameters { string(name: 'STAGE', defaultValue: 'staging', description: 'the deployment state (staging, qa, prod)') }
  environment {
    CI = 'true'
    STAGE = 'main'
    PREFIX = '/tmp/.npm'
  }

  stages {
     when {
        branch 'staging'
      }
    stage('Build') {
      steps {
                        script {
                            sshPublisher(
                                continueOnError: false, failOnError: true,
                                publishers: [
                                    sshPublisherDesc(
                                        configName: "testvm",
                                        verbose: true,
                                        transfers: [
                                            sshTransfer(
                                                remoteDirectory: "",
                                                execCommand: "cd /home/ubuntu/stag/jenkins-build && git pull && ls -l"
                                                //execCommand: "cd /var/www/nv_app/natures-vault-user && git pull && npm i && npm run build && sudo rm -rf /var/www/nv_app/tokensale_app/* && cp -r /var/www/nv_app/natures-vault-user/dist/* /var/www/nv_app/tokensale_app/ && cp /var/www/nv_app/natures-vault-user/.htaccess /var/www/nv_app/tokensale_app/"

                                            )
                                        ])
                                ])
                        }
                    
                }
        }
    

    stage('Prod Deployment') {
      when {
        branch 'production'
      }
      environment {
        STAGE = 'prod'
      }
      steps {
                        script {
                            sshPublisher(
                                continueOnError: false, failOnError: true,
                                publishers: [
                                    sshPublisherDesc(
                                        configName: "testvm",
                                        verbose: true,
                                        transfers: [
                                            sshTransfer(
                                                remoteDirectory: "",
                                                execCommand: "cd /var/ && ls -l"
                                                //execCommand: "cd /var/www/nv_app/natures-vault-user && git pull && npm i && npm run build && sudo rm -rf /var/www/nv_app/tokensale_app/* && cp -r /var/www/nv_app/natures-vault-user/dist/* /var/www/nv_app/tokensale_app/ && cp /var/www/nv_app/natures-vault-user/.htaccess /var/www/nv_app/tokensale_app/"

                                            )
                                        ])
                                ])
                        }
                    
                }
    }
  }
  post {
                always {
                    emailext attachLog: true, attachmentsPattern: 'generatedFile.txt',
                        body: "sha: ${env.GIT_COMMIT} ${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL} \n\n\n Thanks,\nDevOps Team",
                        to: "vimal.pr@accubits.com",
                        subject: "${env.JOB_NAME} Build ${currentBuild.currentResult}"
    
                }
                success {
                    echo 'success'
                }
                failure {
                    echo 'failure'
                }
                unstable {
                    echo 'unstable'
                }
                changed {
                    echo 'changed'
                }
            }
}
   

