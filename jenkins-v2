pipeline {
agent any
environment{
		branch1="${BRANCH}"
        branch2="${BRANCH}"
	}

stages {
    
    
    stage('Deploy to stag') {
    
    when {
                expression { 
					branch1 == "main" 
				}
            }
            
        steps {
                     script {                          
                            sshPublisher(
                                continueOnError: false, failOnError: true,
                                publishers: [
                                    sshPublisherDesc(
                                        configName: "testvm",
                                        verbose: true,
                                        transfers: [
                                            sshTransfer(
                                                remoteDirectory: "",
                                                
                                                execCommand: "cd /var/ && ls -l"
                                                

                                            )
                                        ])
                                ])
                        }
                    
                }
    }

    stage('Deploy to PROD') {

        steps {
                        script {
                            sshPublisher(
                                continueOnError: false, failOnError: true,
                                publishers: [
                                    sshPublisherDesc(
                                        configName: "testvm",
                                        verbose: true,
                                        transfers: [
                                            sshTransfer(
                                                remoteDirectory: "",
                                                
                                                execCommand: "cd /var/ && ls -l"
                                                

                                            )
                                        ])
                                ])
                        }
                    
                }
    }
  }
}
